# vim起動時にロードされる
[[plugins]]
repo = 'Shougo/dein.vim'

# colorscheme settings
[[plugins]]
repo = 'gosukiwi/vim-atom-dark'
hook_add = '''
  syntax on
  colorscheme atom-dark-256
'''

# ステータスライン
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {'colorscheme': 'wombat'}
'''

# コメントアウト
[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
    nnoremap ? :'<,'>TComment<CR>
    vnoremap ? :'<,'>TComment<CR>
'''

# windowsizeのやつ
[[plugins]]
repo = 'simeji/winresizer'

# gitの記号
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = 'set updatetime=100'

# gitコマンド
[[plugins]]
repo = 'tpope/vim-fugitive' 

# 多言語パック(プラグイン無効化は↓)
# let let g:polyglot_disabled = ['{言語}']
[[plugins]]
repo = 'sheerun/vim-polyglot' 

# lsp
[[plugins]]
repo = 'neoclide/coc.nvim'
merged = 0 
rev = 'release'
build = '''
  git checkout release
'''
hook_add = '''
  set hidden

  set nobackup
  set nowritebackup

  set pumblend=10

  set updatetime=100

  set statusline^=%{coc#status()}

  nmap <silent> <Leader><Leader> :<C-u>CocList<cr>

  nmap <silent> <Leader>h :<C-u>call CocAction('doHover')<cr>

  nmap <silent> <Leader>df :vs<CR><Plug>(coc-definition)

  nmap <silent> <Leader>rf <Plug>(coc-references)

  nmap <silent> <Leader>rn <Plug>(coc-rename)

  nmap <silent> <Leader>fmt <Plug>(coc-format)

  nmap <Leader>e <Cmd>CocCommand explorer<CR>

  nmap <silent> <C-p> <Plug>(coc-diagnostic-prev)

  nmap <silent> <C-n> <Plug>(coc-diagnostic-next)

  command! -nargs=0 Prettier :CocCommand prettier.forceFormatDocument

  command -nargs=0 Swagger :CocCommand Swagger.render
'''

# fzf
# [[plugins]]
# repo = 'junegunn/fzf.vim'
# on_cmd = [
#     'Files',
#     'ProjectFiles',
#     'Buffers',
#     'BLines',
#     'History',
#     'Tags',
#     'BTags',
#     'GFiles',
#     'Ag',
# ]
# hook_add = '''
# nnoremap <silent> ,a :<C-u>Ag<CR>
# nnoremap <silent> ,f :<C-u>ProjectFiles<CR>
# nnoremap <silent> ,b :<C-u>Buffers<CR>
# nnoremap <silent> ,m :<C-u>History<CR>
# set rtp+=/usr/local/bin/fzf 
# '''

# バッファのカラースキーマ
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'

# ファイルエクスプローラ
[[plugins]]
repo = 'nvim-tree/nvim-tree.lua'
[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'
[[plugins]]
repo = 'nvim-tree/nvim-web-devicons'

# ファイル検索
[[plugins]]
repo = 'nvim-lua/plenary.nvim'
[[plugins]]
repo = 'nvim-lua/popup.nvim'
[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
tag = '0.1.0'
requires = ['nvim-lua/plenary.nvim']
[[plugins]]
repo = 'nvim-telescope/telescope-file-browser.nvim'

# copilot
[[plugins]]
repo = 'github/copilot.vim'
[[plugins]] # CopilotChat
repo = 'CopilotC-Nvim/CopilotChat.nvim'
depends = ['github/copilot.vim', 'nvim-lua/plenary.nvim']
branch = 'canary'

# 閉じタグ補完
[[plugins]]
repo = 'windwp/nvim-ts-autotag'

# 閉じかっこ補完
 [[plugins]]
 repo = 'windwp/nvim-autopairs'
 if = 'has("nvim")'
 on_lua = 'nvim-autopairs'
 on_event = 'InsertEnter'
 hook_source = '''
 lua require('nvim-autopairs').setup{}
 '''

# tsxのコメントアウト
[[plugins]]
repo = 'folke/ts-comments.nvim'

