# vim起動時にロードされる
[[plugins]]
repo = 'Shougo/dein.vim'

# colorscheme settings
[[plugins]]
repo = 'gosukiwi/vim-atom-dark'
hook_add = '''
  syntax on
  colorscheme atom-dark-256
'''

# ステータスライン
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {'colorscheme': 'wombat'}
'''

# コメントアウト
[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
    nnoremap ? :'<,'>TComment<CR>
    vnoremap ? :'<,'>TComment<CR>
'''

# windowsizeのやつ
[[plugins]]
repo = 'simeji/winresizer'

# gitの記号
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = 'set updatetime=100'

# 多言語パック(プラグイン無効化は↓)
# let let g:polyglot_disabled = ['{言語}']
[[plugins]]
repo = 'sheerun/vim-polyglot' 

# lsp
[[plugins]]
repo = 'neoclide/coc.nvim'
merged = 0 
rev = 'release'
build = '''
  git checkout release
'''
hook_add = '''
  set hidden

  set nobackup
  set nowritebackup

  set pumblend=10

  set updatetime=100

  set statusline^=%{coc#status()}

  nmap <silent> <space><space> :<C-u>CocList<cr>

  nmap <silent> <space>h :<C-u>call CocAction('doHover')<cr>

  nmap <silent> <space>df :vs<CR><Plug>(coc-definition)

  nmap <silent> <space>rf <Plug>(coc-references)

  nmap <silent> <space>rn <Plug>(coc-rename)

  nmap <silent> <space>fmt <Plug>(coc-format)

  nmap <space>e <Cmd>CocCommand explorer<CR>

  nmap <silent> <C-p> <Plug>(coc-diagnostic-prev)

  nmap <silent> <C-n> <Plug>(coc-diagnostic-next)

  command! -nargs=0 Prettier :CocCommand prettier.forceFormatDocument

  command -nargs=0 Swagger :CocCommand swagger.render
'''

# /usr/local/bin/fzf

[[plugins]]
repo = 'junegunn/fzf.vim'
on_cmd = [
    'Files',
    'ProjectFiles',
    'Buffers',
    'BLines',
    'History',
    'Tags',
    'BTags',
    'GFiles',
    'Ag',
]
hook_add = '''
nnoremap <silent> ,a :<C-u>Ag<CR>
nnoremap <silent> ,f :<C-u>ProjectFiles<CR>
nnoremap <silent> ,b :<C-u>Buffers<CR>
nnoremap <silent> ,m :<C-u>History<CR>
set rtp+=/usr/local/bin/fzf 
'''
